import pandas as pd
from datetime import datetime, timedelta

# Function to generate the report
def generate_monthly_report(system_performance_file, incident_log_file, report_file):
    # Load data from CSV files
    performance_data = pd.read_csv(system_performance_file)
    incident_data = pd.read_csv(incident_log_file)

    # Ensure the date columns are in datetime format
    performance_data['Date'] = pd.to_datetime(performance_data['Date'])
    incident_data['Date'] = pd.to_datetime(incident_data['Date'])
    
    # Get the current month and year
    today = datetime.today()
    first_day_of_month = today.replace(day=1)
    last_day_of_month = (first_day_of_month + timedelta(days=31)).replace(day=1) - timedelta(days=1)
    
    # Filter data for the current month
    monthly_performance = performance_data[(performance_data['Date'] >= first_day_of_month) & (performance_data['Date'] <= last_day_of_month)]
    monthly_incidents = incident_data[(incident_data['Date'] >= first_day_of_month) & (incident_data['Date'] <= last_day_of_month)]

    # Summarize system performance data
    performance_summary = monthly_performance.groupby('System').agg(
        Avg_CPU_Usage=('CPU_Usage', 'mean'),
        Max_Memory_Usage=('Memory_Usage', 'max')
    ).reset_index()

    # Summarize incident data
    incident_summary = monthly_incidents.groupby('Category').agg(
        Total_Incidents=('Incident_ID', 'count'),
        Avg_Response_Time=('Response_Time', 'mean')
    ).reset_index()

    # Generate the report
    with open(report_file, 'w') as f:
        f.write(f"IT Monthly Report for {first_day_of_month.strftime('%B %Y')}\n\n")
        
        f.write("System Performance Summary:\n")
        f.write(performance_summary.to_string(index=False))
        f.write("\n\n")
        
        f.write("Incident Summary:\n")
        f.write(incident_summary.to_string(index=False))

# File paths
system_performance_file = 'system_performance.csv'
incident_log_file = 'incident_log.csv'
report_file = 'monthly_report.txt'

# Generate the report
generate_monthly_report(system_performance_file, incident_log_file, report_file)
